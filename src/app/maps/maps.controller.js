(function () {
    'use strict';

    angular
        .module('tuktukV2Dahboard')
        .controller('MapsController', MapsController);

    /** @ngInject */
    function MapsController($scope, $log, $rootScope, MapService, NgMap, AUTH_API) {
        var vm = this
        vm.API_URL = AUTH_API
        vm.allDrivers = []
        console.log("map cont loaded")
       // vm.geoJSON= {"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[75.835898,22.639996],[75.834653,22.636947],[75.827658,22.637224],[75.827272,22.641264],[75.824697,22.641739],[75.824354,22.645106],[75.82268,22.647086],[75.81959,22.648037],[75.815427,22.649542],[75.813496,22.651641],[75.817745,22.655878],[75.820148,22.657938],[75.818517,22.660314],[75.817745,22.663799],[75.814054,22.664987],[75.811951,22.665541],[75.809205,22.663482],[75.806887,22.663641],[75.799592,22.664789],[75.796716,22.665937],[75.795815,22.668115],[75.806715,22.670689],[75.812294,22.6716],[75.815041,22.672867],[75.816629,22.67457],[75.814612,22.675837],[75.81414,22.678966],[75.812509,22.679559],[75.812552,22.682806],[75.812166,22.687281],[75.810664,22.690646],[75.812724,22.694408],[75.816672,22.697654],[75.82092,22.698446],[75.82444,22.699],[75.824697,22.701692],[75.821993,22.704701],[75.811093,22.705176],[75.805299,22.708145],[75.805342,22.713411],[75.802124,22.718992],[75.79972,22.722674],[75.796845,22.726632],[75.798562,22.731778],[75.79442,22.73629],[75.800257,22.748955],[75.80678,22.760511],[75.819826,22.774599],[75.832701,22.785361],[75.845575,22.791217],[75.842121,22.793986],[75.841262,22.79818],[75.843494,22.800673],[75.848215,22.800752],[75.848386,22.790821],[75.852163,22.786825],[75.866861,22.786311],[75.88244,22.79003],[75.891023,22.791929],[75.899949,22.791771],[75.909047,22.788606],[75.914626,22.783145],[75.916686,22.773807],[75.916772,22.770009],[75.922265,22.767555],[75.929046,22.767555],[75.92999,22.762332],[75.928874,22.759324],[75.927758,22.756475],[75.930247,22.754259],[75.93411,22.752834],[75.935569,22.748322],[75.934968,22.741119],[75.934539,22.733203],[75.933852,22.727503],[75.933337,22.723703],[75.931878,22.717211],[75.930848,22.709135],[75.929732,22.70581],[75.929217,22.702088],[75.927587,22.698683],[75.926299,22.695991],[75.928788,22.695279],[75.930076,22.693695],[75.930934,22.690765],[75.929561,22.688706],[75.925183,22.690211],[75.924067,22.689181],[75.923467,22.687756],[75.92278,22.686093],[75.922608,22.685063],[75.922437,22.683796],[75.922093,22.682054],[75.921922,22.680866],[75.92175,22.679361],[75.920806,22.677382],[75.91969,22.674135],[75.918832,22.671996],[75.917115,22.667403],[75.915999,22.663839],[75.917373,22.663126],[75.920463,22.661383],[75.92175,22.659166],[75.918746,22.656393],[75.915313,22.655364],[75.915313,22.653938],[75.91291,22.653225],[75.90879,22.654651],[75.907588,22.655918],[75.905185,22.652829],[75.904326,22.648948],[75.902867,22.645938],[75.896773,22.641343],[75.889134,22.637937],[75.881023,22.638412],[75.836735,22.639996],[75.835919,22.640076],[75.835903,22.639996],[75.835898,22.639996]]]},"properties":{"vt":"auto","city":"Indore","status":1}},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[75.835898,22.639996],[75.834653,22.636947],[75.827658,22.637224],[75.827272,22.641264],[75.824697,22.641739],[75.824354,22.645106],[75.82268,22.647086],[75.81959,22.648037],[75.815427,22.649542],[75.813496,22.651641],[75.817745,22.655878],[75.820148,22.657938],[75.818517,22.660314],[75.817745,22.663799],[75.814054,22.664987],[75.811951,22.665541],[75.809205,22.663482],[75.806887,22.663641],[75.799592,22.664789],[75.796716,22.665937],[75.795815,22.668115],[75.806715,22.670689],[75.812294,22.6716],[75.815041,22.672867],[75.816629,22.67457],[75.814612,22.675837],[75.81414,22.678966],[75.812509,22.679559],[75.812552,22.682806],[75.812166,22.687281],[75.810664,22.690646],[75.812724,22.694408],[75.816672,22.697654],[75.82092,22.698446],[75.82444,22.699],[75.824697,22.701692],[75.821993,22.704701],[75.811093,22.705176],[75.805299,22.708145],[75.805342,22.713411],[75.802124,22.718992],[75.79972,22.722674],[75.796845,22.726632],[75.798562,22.731778],[75.79442,22.73629],[75.800257,22.748955],[75.80678,22.760511],[75.819826,22.774599],[75.832701,22.785361],[75.845575,22.791217],[75.842121,22.793986],[75.841262,22.79818],[75.843494,22.800673],[75.848215,22.800752],[75.848386,22.790821],[75.852163,22.786825],[75.866861,22.786311],[75.88244,22.79003],[75.891023,22.791929],[75.899949,22.791771],[75.909047,22.788606],[75.914626,22.783145],[75.916686,22.773807],[75.916772,22.770009],[75.922265,22.767555],[75.929046,22.767555],[75.92999,22.762332],[75.928874,22.759324],[75.927758,22.756475],[75.930247,22.754259],[75.93411,22.752834],[75.935569,22.748322],[75.934968,22.741119],[75.934539,22.733203],[75.933852,22.727503],[75.933337,22.723703],[75.931878,22.717211],[75.930848,22.709135],[75.929732,22.70581],[75.929217,22.702088],[75.927587,22.698683],[75.926299,22.695991],[75.928788,22.695279],[75.930076,22.693695],[75.930934,22.690765],[75.929561,22.688706],[75.925183,22.690211],[75.924067,22.689181],[75.923467,22.687756],[75.92278,22.686093],[75.922608,22.685063],[75.922437,22.683796],[75.922093,22.682054],[75.921922,22.680866],[75.92175,22.679361],[75.920806,22.677382],[75.91969,22.674135],[75.918832,22.671996],[75.917115,22.667403],[75.915999,22.663839],[75.917373,22.663126],[75.920463,22.661383],[75.92175,22.659166],[75.918746,22.656393],[75.915313,22.655364],[75.915313,22.653938],[75.91291,22.653225],[75.90879,22.654651],[75.907588,22.655918],[75.905185,22.652829],[75.904326,22.648948],[75.902867,22.645938],[75.896773,22.641343],[75.889134,22.637937],[75.881023,22.638412],[75.836735,22.639996],[75.835919,22.640076],[75.835903,22.639996],[75.835898,22.639996]]]},"properties":{"vt":"bike","city":"indore","status":-2}}]}
        NgMap.getMap({id:'drivers_map'}).then(function (map) {
            vm.map = map;
            map.data.setStyle({
                fillColor: 'gray',
                strokeWeight: 1,
                strokeOpacity:.1,
                fillOpacity:.1
            });
            MapService.loadGeoJson({}, function (response) {
                    //vm.geoJSON = response
                  /*  var temp = {}
                    temp.features = response.features
                    temp.type = response.type
                    vm.geoJSON=JSON.parse(angular.toJson(temp))
                    console.log("typeof vm.geoJSON", typeof  vm.geoJSON);*/
                    vm.geoJSON = {}
                    vm.geoJSON = response
                    vm.map.data.addGeoJson(vm.geoJSON );

                }, function (error) {
                    console.log("error ", error)
                }
            )
        });

        vm.getAddress= function (marker) {
            alert("get address")
           /* var lat = parseFloat(marker[0]);
            var lng = parseFloat(marker[1]);
            var latlng = new google.maps.LatLng(lat, lng);
            var geocoder =  new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        vm.driver.address = results[1].formatted_address;
                        //return results[1].formatted_address;
                    }
                }
            });*/
        }

        vm.clicked = function(marker) {
            console.log('Clicked a link inside infoWindow',marker);
            var lat = parseFloat(marker[0]);
            var lng = parseFloat(marker[1]);
            var latlng = new google.maps.LatLng(lat, lng);
            var geocoder =  new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        vm.driver.address = results[1].formatted_address;
                        //return results[1].formatted_address;
                    }
                }
            });
        };

        getDrivers()
        function getDrivers(){
            MapService.getDrivers({
                    city: $rootScope.city,
                    vehicle: $rootScope.vehicleType
                }, function (response) {
               vm.allDrivers = response;
              console.log("vm.drivers ", vm.allDrivers);
                }, function (error) {
                    console.log("error ", error)
                }
            )
        }


        vm.showDetail = function(e, driver, index) {
            vm.driver = driver;

            vm.map.showInfoWindow('iw-drivers', index);
        };

        vm.hideDetail = function() {
            vm.map.hideInfoWindow('iw-drivers');
        };

        vm.getAddress = function() {
            vm.map.hideInfoWindow('iw-drivers');
        };

    }
})();
